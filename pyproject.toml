[tool.poetry]
name = "package-name"
version = "1.4.0"
description = "Package description"
license = "MIT"
authors = ["Author Name <author.email@example.com>"]
readme = "README.md"
packages = [
  { include = "package_name", "from" = "src" }
]

repository = "https://github.com/github-user/package-name"
keywords = ["Package Name"]
classifiers = [
    "Topic :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
]

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.31.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"


[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
pylint = "^2.17.5"

[tool.black]
line-length = 100

[tool.pylint.main]
score = "n"
no-docstring-rgx = "^_|^test_"

[tool.pylint."messages control"]
disable = ["missing-module-docstring"]

[tool.pytest.ini_options]
minversion = "7.4.0"
pythonpath = "src"
addopts = "-vv --import-mode=importlib"

[tool.poe.tasks]
package-name = "package_name.cli:run"

[tool.poe.tasks.test]
help = "Run application tests"
control.expr = "suite"
args = [{ name = "suite", help = "Filter tests based on suite name: [all|e2e|integration|unit]" }]

  [[tool.poe.tasks.test.switch]]
  case = "all"
  help = "Run all tests (without coverage)"
  cmd = "pytest"

  [[tool.poe.tasks.test.switch]]
  case = "e2e"
  help = "Run e2e tests only"
  cmd = "pytest tests/e2e"

  [[tool.poe.tasks.test.switch]]
  case = "integration"
  help = "Run integration tests only (with coverage)"
  cmd = "pytest --cov=src/package_name --cov-fail-under=90 --cov=src/package_name --cov-branch --cov-report term-missing:skip-covered tests/integration"

  [[tool.poe.tasks.test.switch]]
  case = "unit"
  help = "Run unit tests only (with coverage)"
  cmd = "pytest --cov=src/package_name --cov-fail-under=90 --cov=src/package_name --cov-branch --cov-report term-missing:skip-covered tests/unit"

  [[tool.poe.tasks.test.switch]]
  help = "Default: Run unit and integration tests with coverage"
  cmd = "pytest --cov=src/package_name --cov-fail-under=90 --cov=src/package_name --cov-branch --cov-report term-missing:skip-covered tests/unit tests/integration"

[tool.poe.tasks.check]
help = "Check code quality"
control.expr = "type"
args = [{ name = "type", help = "Type of code check to run: [lint|format]" }]

  [[tool.poe.tasks.check.switch]]
  case = "lint"
  help = "Run linting checks only "
  cmd = "pylint --verbose --score y src tests"

  [[tool.poe.tasks.check.switch]]
  case = "format"
  help = "Run formatting checks only"
  shell = """
  black --check --line-length 100 .
  npx --yes prettier@3.0.3 . --no-config --check
  """

  [[tool.poe.tasks.check.switch]]
  help = "Default: Run formatting and linting checks"
  shell = """
  black --check --line-length 100 .
  npx --yes prettier@3.0.3 . --no-config --check
  pylint --verbose --score y src tests
  """

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"